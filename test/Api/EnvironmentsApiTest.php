<?php
/**
 * EnvironmentsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Acquia\CloudApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Acquia Cloud API Documentation
 *
 * Acquia Cloud API  # Compatibility  ## Stability  The response for all resource endpoints includes an `X-CloudAPI-Stability` header that indicates what changes, if any, Acquia will make to the resource and how changes will be communicated.  There are three levels of stability:  * `prototype`: A prototype resource is experimental and major changes are likely. A prototype resource may not reach production.     * Compatible and emergency changes may be made with no advance notice     * Disruptive changes may be made with one week notice     * Deprecated resources will remain available for at least one month after deprecation * `development`: A resource that is unlikely to change, but is still being worked on, will be marked as in development. These resources are very likely to reach production.     * Compatible and emergency changes may be made with no advance notice     * Disruptive changes may be made with one month notice     * Deprecated resources will remain available for at least six months after deprecation * `production`: A production resource will not introduce breaking changes within a version, and any breaking changes between versions will be communicated ahead of time.  ## Deprecation  Over time, endpoints may become obsolete and will be removed in the future. These endpoints will be marked with an `X-CloudAPI-Deprecated` header indicating the version in which they were deprecated and the reason for the deprecation. Deprecated endpoints may be removed in the next version of the resource.  ## Versioning  All resource endpoints are versioned within the API. Endpoints that have reached production will not introduce breaking changes between versions. Non-production endpoints will not version for changes.  A specific version of an endpoint can be requested via the `Accept` header:      Accept: application/json, version=2  If the version is not specified, the latest version of the endpoint will be used.  Starting with version 3, we will support the current version of an endpoint and the previous version. Version 1 of the API is [provided elsewhere](https://cloudapi.acquia.com/).  ## Errors  Some endpoints will return a 503 status when dependent services are unavailable:      application/json     {         \"error\": \"system\",         \"message\": \"This action is currently unavailable. Please try again later.\"     }  ## Authentication  All Acquia Cloud API calls require authentication to work properly.  Learn more: <a href='https://docs.acquia.com/acquia-cloud/develop/api/auth/' target='_blank'>https://docs.acquia.com/acquia-cloud/develop/api/auth/</a>  ### Example implementation  An example PHP script for making authenticated API requests can be found at <a href='https://docs.acquia.com/_downloads/api-v2-auth.php' target='_blank'>https://docs.acquia.com/_downloads/api-v2-auth.php</a>. This script uses the <a href='https://oauth2-client.thephpleague.com/' target='_blank'>League/oauth2-client</a> library, installed via Composer.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Acquia\CloudApi\Test\Api;

use \Acquia\CloudApi\Configuration;
use \Acquia\CloudApi\ApiException;
use \Acquia\CloudApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EnvironmentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Acquia\CloudApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EnvironmentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteCdnByEnvironmentId
     *
     * Disables a CDN for an environment..
     *
     */
    public function testDeleteCdnByEnvironmentId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCertificate
     *
     * Deletes a specific certificate by its ID..
     *
     */
    public function testDeleteCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCertificateSigningRequest
     *
     * Deletes the certificate signing request..
     *
     */
    public function testDeleteCertificateSigningRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironment
     *
     * Deletes a CD environment..
     *
     */
    public function testDeleteEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironmentSearchIndex
     *
     * Removes and deletes a specific search index from an environment.
     *
     */
    public function testDeleteEnvironmentSearchIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironmentsDatabaseBackup
     *
     * Deletes a database backup..
     *
     */
    public function testDeleteEnvironmentsDatabaseBackup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironmentsDomain
     *
     * Removes the domain from this environment..
     *
     */
    public function testDeleteEnvironmentsDomain()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironmentsLogForwardingDestination
     *
     * Deletes the specified log forwarding destination..
     *
     */
    public function testDeleteEnvironmentsLogForwardingDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEnvironmentsVariable
     *
     * Removes an environment variable from an environment..
     *
     */
    public function testDeleteEnvironmentsVariable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAvailableRuntimes
     *
     * Return a list of runtimes..
     *
     */
    public function testGetAvailableRuntimes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCdnByEnvironmentId
     *
     * Returns the CDN status for an environment..
     *
     */
    public function testGetCdnByEnvironmentId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCertificate
     *
     * Returns a specific certificate by certificate id..
     *
     */
    public function testGetCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCertificateSigningRequest
     *
     * Returns the certificate signing request for the certificate specified by id..
     *
     */
    public function testGetCertificateSigningRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCertificateSigningRequests
     *
     * Returns certificate signing requests..
     *
     */
    public function testGetCertificateSigningRequests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCertificates
     *
     * Return a list of SSL certificates..
     *
     */
    public function testGetCertificates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCron
     *
     * Return details about a specific cron job..
     *
     */
    public function testGetCron()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCronJobsByEnvironmentId
     *
     * Return environment cron jobs..
     *
     */
    public function testGetCronJobsByEnvironmentId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEIPs
     *
     * Return a list of Web EIPs..
     *
     */
    public function testGetEIPs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironment
     *
     * Return details about a specific environment..
     *
     */
    public function testGetEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentCloudActions
     *
     * Returns a list of Cloud Actions..
     *
     */
    public function testGetEnvironmentCloudActions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentSearchIndex
     *
     * Returns a search configuration set for an application.
     *
     */
    public function testGetEnvironmentSearchIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentSearchIndexes
     *
     * Returns a collection of search indexes for an environment..
     *
     */
    public function testGetEnvironmentSearchIndexes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentSearchList
     *
     * Returns a traversal endpoint for search entities for the environment..
     *
     */
    public function testGetEnvironmentSearchList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabase
     *
     * Return details about a specific database..
     *
     */
    public function testGetEnvironmentsDatabase()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabaseBackup
     *
     * Return details about a specific backup..
     *
     */
    public function testGetEnvironmentsDatabaseBackup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabaseBackups
     *
     * Returns a list of backups..
     *
     */
    public function testGetEnvironmentsDatabaseBackups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabaseDownloadBackup
     *
     * Downloads the database backup file..
     *
     */
    public function testGetEnvironmentsDatabaseDownloadBackup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabasePhpConfig
     *
     * Returns PHP configuration details for this database..
     *
     */
    public function testGetEnvironmentsDatabasePhpConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDatabases
     *
     * Returns a list of databases..
     *
     */
    public function testGetEnvironmentsDatabases()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDns
     *
     * Returns DNS configuration details for an environment..
     *
     */
    public function testGetEnvironmentsDns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDomain
     *
     * Return details about a specific domain..
     *
     */
    public function testGetEnvironmentsDomain()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDomainStatus
     *
     * Returns details about the domain..
     *
     */
    public function testGetEnvironmentsDomainStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsDomains
     *
     * Returns a list of domains..
     *
     */
    public function testGetEnvironmentsDomains()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsLog
     *
     * Downloads the log file..
     *
     */
    public function testGetEnvironmentsLog()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsLogForwardingDestination
     *
     * Returns the specified log forwarding destination..
     *
     */
    public function testGetEnvironmentsLogForwardingDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsLogForwardingDestinations
     *
     * Returns a collection of log forwarding destinations for this environment..
     *
     */
    public function testGetEnvironmentsLogForwardingDestinations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsLogs
     *
     * Returns a list of log files for this environment available for download..
     *
     */
    public function testGetEnvironmentsLogs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsLogstream
     *
     * Returns a logstream url and metadata..
     *
     */
    public function testGetEnvironmentsLogstream()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsMetrics
     *
     * Does not return any data. Allows traversal to metrics groups endpoints..
     *
     */
    public function testGetEnvironmentsMetrics()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsServer
     *
     * Return details about a specific server..
     *
     */
    public function testGetEnvironmentsServer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsServers
     *
     * Returns a list of servers..
     *
     */
    public function testGetEnvironmentsServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsSettings
     *
     * Provides links to environment settings..
     *
     */
    public function testGetEnvironmentsSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsStackMetrics
     *
     * Does not return any data. Allows traversal to StackMetrics endpoints..
     *
     */
    public function testGetEnvironmentsStackMetrics()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsStackMetricsData
     *
     * Returns StackMetrics data for the metrics specified in the filter paramater (e.g., apache-access, web-cpu)..
     *
     */
    public function testGetEnvironmentsStackMetricsData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsUsageData
     *
     * Retrieves usage data for an environment..
     *
     */
    public function testGetEnvironmentsUsageData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsUsageLinks
     *
     * Retrieves traversal links for an environment's usage data..
     *
     */
    public function testGetEnvironmentsUsageLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsUsageMetricData
     *
     * Retrieves usage metric data for an environment..
     *
     */
    public function testGetEnvironmentsUsageMetricData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsVariable
     *
     * Get an environment variable associated with this environment..
     *
     */
    public function testGetEnvironmentsVariable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvironmentsVariables
     *
     * Returns a list of environment variables associated with this environment..
     *
     */
    public function testGetEnvironmentsVariables()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSsl
     *
     * Returns the SSL settings for this environment..
     *
     */
    public function testGetSsl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postActivateCertificate
     *
     * Activates an SSL certificate..
     *
     */
    public function testPostActivateCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCdnByEnvironmentId
     *
     * Enables a CDN for an environment..
     *
     */
    public function testPostCdnByEnvironmentId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCertificate
     *
     * Install an SSL certificate..
     *
     */
    public function testPostCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCertificateSigningRequest
     *
     * Generates a certificate signing request (CSR) for one or more domains..
     *
     */
    public function testPostCertificateSigningRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postChangeEnvironmentLabel
     *
     * Change the label for an environment..
     *
     */
    public function testPostChangeEnvironmentLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDeactivateCertificate
     *
     * Deactivates an active SSL certificate..
     *
     */
    public function testPostDeactivateCertificate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDeployArtifact
     *
     * Deploys an artifact to this environment..
     *
     */
    public function testPostDeployArtifact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCloudActionsDisable
     *
     * Disables Cloud Actions..
     *
     */
    public function testPostEnvironmentCloudActionsDisable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCloudActionsEnable
     *
     * Enables Cloud Actions..
     *
     */
    public function testPostEnvironmentCloudActionsEnable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCloudActionsReset
     *
     * Resets Cloud Actions..
     *
     */
    public function testPostEnvironmentCloudActionsReset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCronDelete
     *
     * Deletes a cron job..
     *
     */
    public function testPostEnvironmentCronDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCronDisable
     *
     * Disables a cron job..
     *
     */
    public function testPostEnvironmentCronDisable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCronEnable
     *
     * Enables a cron job..
     *
     */
    public function testPostEnvironmentCronEnable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentCrons
     *
     * Creates a scheduled job with cron..
     *
     */
    public function testPostEnvironmentCrons()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentEmailDisable
     *
     * Disables email for an environment..
     *
     */
    public function testPostEnvironmentEmailDisable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentEmailEnable
     *
     * Enables email for an environment..
     *
     */
    public function testPostEnvironmentEmailEnable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentSearchIndexes
     *
     * Creates a search index for an environment..
     *
     */
    public function testPostEnvironmentSearchIndexes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsClearCaches
     *
     * Clears the caches for one or more domains attached to this environment..
     *
     */
    public function testPostEnvironmentsClearCaches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDatabaseBackups
     *
     * Create a backup..
     *
     */
    public function testPostEnvironmentsDatabaseBackups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDatabaseRestoreBackup
     *
     * Restores this backup to the appropriate environment's database..
     *
     */
    public function testPostEnvironmentsDatabaseRestoreBackup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDatabases
     *
     * Copies a database to this environment..
     *
     */
    public function testPostEnvironmentsDatabases()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDeployCode
     *
     * Deploys code to this environment..
     *
     */
    public function testPostEnvironmentsDeployCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDisableLiveDev
     *
     * Disable Live Development on this environment..
     *
     */
    public function testPostEnvironmentsDisableLiveDev()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDisableLogForwardingDestination
     *
     * Disables the specified log forwarding destination..
     *
     */
    public function testPostEnvironmentsDisableLogForwardingDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDisableProductionMode
     *
     * Disables production mode for an environment..
     *
     */
    public function testPostEnvironmentsDisableProductionMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDomainClearCaches
     *
     * Clears the caches for the specified domain..
     *
     */
    public function testPostEnvironmentsDomainClearCaches()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDomainClearVarnish
     *
     * Clears the Varnish cache for the specified domain..
     *
     */
    public function testPostEnvironmentsDomainClearVarnish()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDomains
     *
     * Adds a domain to the environment..
     *
     */
    public function testPostEnvironmentsDomains()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsDomainsClearVarnish
     *
     * Clears the Varnish cache for one or more domains attached to this environment..
     *
     */
    public function testPostEnvironmentsDomainsClearVarnish()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsEnableLiveDev
     *
     * Enable Live Development on this environment..
     *
     */
    public function testPostEnvironmentsEnableLiveDev()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsEnableLogForwardingDestination
     *
     * Enables the specified log forwarding destination..
     *
     */
    public function testPostEnvironmentsEnableLogForwardingDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsEnableProductionMode
     *
     * Enables production mode for an environment..
     *
     */
    public function testPostEnvironmentsEnableProductionMode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsFiles
     *
     * Copies files to this environment..
     *
     */
    public function testPostEnvironmentsFiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsImportSite
     *
     * Imports a site to this environment..
     *
     */
    public function testPostEnvironmentsImportSite()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsLog
     *
     * Creates a log file snapshot..
     *
     */
    public function testPostEnvironmentsLog()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsLogForwardingDestinations
     *
     * Creates a log forwarding destination..
     *
     */
    public function testPostEnvironmentsLogForwardingDestinations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsServerReboot
     *
     * Reboots a server..
     *
     */
    public function testPostEnvironmentsServerReboot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsServerRelaunch
     *
     * Relaunches a server..
     *
     */
    public function testPostEnvironmentsServerRelaunch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsServerSuspend
     *
     * Suspends a server..
     *
     */
    public function testPostEnvironmentsServerSuspend()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsServerUpgrade
     *
     * Upgrades a server from \"precise\" to \"xenial\"..
     *
     */
    public function testPostEnvironmentsServerUpgrade()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsSwitchCode
     *
     * Switches code on this environment to a different branch or release tag..
     *
     */
    public function testPostEnvironmentsSwitchCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postEnvironmentsVariables
     *
     * Adds a new environment variable to an environment..
     *
     */
    public function testPostEnvironmentsVariables()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postMigrateEnvironment
     *
     * Create a Migrate Environment using the provided environment as its source..
     *
     */
    public function testPostMigrateEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postPromoteEnvironment
     *
     * Promote a Migrate Environment..
     *
     */
    public function testPostPromoteEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postRefreshEnvironment
     *
     * Refreshes a Migrate Environment..
     *
     */
    public function testPostRefreshEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putCron
     *
     * Modify an existing scheduled job..
     *
     */
    public function testPutCron()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironment
     *
     * Modifies configuration settings for an environment..
     *
     */
    public function testPutEnvironment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironmentCloudActions
     *
     * Modifies an existing list of Cloud Actions..
     *
     */
    public function testPutEnvironmentCloudActions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironmentSearchIndex
     *
     * Updates a search index on an environment..
     *
     */
    public function testPutEnvironmentSearchIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironmentsLogForwardingDestination
     *
     * Updates an environment's log forwarding destination..
     *
     */
    public function testPutEnvironmentsLogForwardingDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironmentsServer
     *
     * Modifies configuration settings for a server..
     *
     */
    public function testPutEnvironmentsServer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putEnvironmentsVariable
     *
     * Updates an environment variable on an environment..
     *
     */
    public function testPutEnvironmentsVariable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
