<?php
/**
 * SubscriptionsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Acquia\CloudApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Acquia Cloud API Documentation
 *
 * Acquia Cloud API  # Compatibility  ## Stability  The response for all resource endpoints includes an `X-CloudAPI-Stability` header that indicates what changes, if any, Acquia will make to the resource and how changes will be communicated.  There are three levels of stability:  * `prototype`: A prototype resource is experimental and major changes are likely. A prototype resource may not reach production.     * Compatible and emergency changes may be made with no advance notice     * Disruptive changes may be made with one week notice     * Deprecated resources will remain available for at least one month after deprecation * `development`: A resource that is unlikely to change, but is still being worked on, will be marked as in development. These resources are very likely to reach production.     * Compatible and emergency changes may be made with no advance notice     * Disruptive changes may be made with one month notice     * Deprecated resources will remain available for at least six months after deprecation * `production`: A production resource will not introduce breaking changes within a version, and any breaking changes between versions will be communicated ahead of time.  ## Deprecation  Over time, endpoints may become obsolete and will be removed in the future. These endpoints will be marked with an `X-CloudAPI-Deprecated` header indicating the version in which they were deprecated and the reason for the deprecation. Deprecated endpoints may be removed in the next version of the resource.  ## Versioning  All resource endpoints are versioned within the API. Endpoints that have reached production will not introduce breaking changes between versions. Non-production endpoints will not version for changes.  A specific version of an endpoint can be requested via the `Accept` header:      Accept: application/json, version=2  If the version is not specified, the latest version of the endpoint will be used.  Starting with version 3, we will support the current version of an endpoint and the previous version. Version 1 of the API is [provided elsewhere](https://cloudapi.acquia.com/).  ## Errors  Some endpoints will return a 503 status when dependent services are unavailable:      application/json     {         \"error\": \"system\",         \"message\": \"This action is currently unavailable. Please try again later.\"     }  ## Authentication  All Acquia Cloud API calls require authentication to work properly.  Learn more: <a href='https://docs.acquia.com/acquia-cloud/develop/api/auth/' target='_blank'>https://docs.acquia.com/acquia-cloud/develop/api/auth/</a>  ### Example implementation  An example PHP script for making authenticated API requests can be found at <a href='https://docs.acquia.com/_downloads/api-v2-auth.php' target='_blank'>https://docs.acquia.com/_downloads/api-v2-auth.php</a>. This script uses the <a href='https://oauth2-client.thephpleague.com/' target='_blank'>League/oauth2-client</a> library, installed via Composer.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Acquia\CloudApi\Test\Api;

use \Acquia\CloudApi\Configuration;
use \Acquia\CloudApi\ApiException;
use \Acquia\CloudApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SubscriptionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Acquia\CloudApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SubscriptionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteShieldAcl
     *
     * Deletes a Shield ACL rule..
     *
     */
    public function testDeleteShieldAcl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSubscriptionDomainRegistration
     *
     * Unregisters a Domain registered with this subscription..
     *
     */
    public function testDeleteSubscriptionDomainRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getShieldAcl
     *
     * Provides a list of Shield ACL rules..
     *
     */
    public function testGetShieldAcl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getShieldAclRuleByUuid
     *
     * Returns the specified Shield ACL rule..
     *
     */
    public function testGetShieldAclRuleByUuid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscription
     *
     * Return details about a specific subscription..
     *
     */
    public function testGetSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionApplications
     *
     * Provides a list of applications that are a part of the subscription..
     *
     */
    public function testGetSubscriptionApplications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionDomainRegistration
     *
     * Returns a speicific Domain registered with this subscription..
     *
     */
    public function testGetSubscriptionDomainRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionDomainRegistrations
     *
     * Returns a list of Domains registered with this subscription..
     *
     */
    public function testGetSubscriptionDomainRegistrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionEntitlements
     *
     * Provides a list of entitlements that are a part of the subscription..
     *
     */
    public function testGetSubscriptionEntitlements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionIdes
     *
     * Returns a list of Cloud IDEs associated with this subscription..
     *
     */
    public function testGetSubscriptionIdes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptions
     *
     * Return a list of subscription..
     *
     */
    public function testGetSubscriptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageData
     *
     * Retrieves aggregate usage data for a subscription..
     *
     */
    public function testGetSubscriptionsUsageData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageDataByApplication
     *
     * Retrieves usage data for a subscription, broken down by application..
     *
     */
    public function testGetSubscriptionsUsageDataByApplication()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageLinks
     *
     * Retrieves traversal links for a subscription's usage data..
     *
     */
    public function testGetSubscriptionsUsageLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageMetricData
     *
     * Retrieves aggregate usage metric data for a subscription..
     *
     */
    public function testGetSubscriptionsUsageMetricData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageViewsDataByApplication
     *
     * Retrieves views data for a subscription, broken down by application..
     *
     */
    public function testGetSubscriptionsUsageViewsDataByApplication()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSubscriptionsUsageVisitsDataByApplication
     *
     * Retrieves visits data for a subscription, broken down by application..
     *
     */
    public function testGetSubscriptionsUsageVisitsDataByApplication()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postResetShieldAcl
     *
     * Resets Shield ACL rules to default settings..
     *
     */
    public function testPostResetShieldAcl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postShieldAcl
     *
     * Creates a Shield ACL rule..
     *
     */
    public function testPostShieldAcl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postSubscriptionDomainRegistration
     *
     * Registers a Domain with this subscription..
     *
     */
    public function testPostSubscriptionDomainRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postSubscriptionVerifyDomainRegistration
     *
     * Triggers re-verification and update to the domain verification status..
     *
     */
    public function testPostSubscriptionVerifyDomainRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putShieldAcl
     *
     * Updates a Shield ACL rule..
     *
     */
    public function testPutShieldAcl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putSubscription
     *
     * Modifies a subscription..
     *
     */
    public function testPutSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
